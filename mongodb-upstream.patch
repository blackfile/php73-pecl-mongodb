From 1470d5c4397300f995f5329ee98f5804f9008dbc Mon Sep 17 00:00:00 2001
From: Jeremy Mikola <jmikola@gmail.com>
Date: Thu, 20 Oct 2016 15:52:37 -0400
Subject: [PATCH] PHPC-791: Bump libbson and libmongoc to 1.5.0-rc3

---
 src/MongoDB/BulkWrite.c | 26 ++++++++++++++++++++------
 src/libbson             |  2 +-
 src/libmongoc           |  2 +-
 3 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/src/MongoDB/BulkWrite.c b/src/MongoDB/BulkWrite.c
index 36982d8..6b72e70 100644
--- a/src/MongoDB/BulkWrite.c
+++ b/src/MongoDB/BulkWrite.c
@@ -275,9 +275,16 @@ PHP_METHOD(BulkWrite, update)
 	}
 
 	if (php_phongo_bulkwrite_update_has_operators(bupdate)) {
-		if (!mongoc_bulk_operation_update_with_opts(intern->bulk, bquery, bupdate, boptions, &error)) {
-			phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
-			goto cleanup;
+		if (zoptions && php_array_existsc(zoptions, "multi") && php_array_fetchc_bool(zoptions, "multi")) {
+			if (!mongoc_bulk_operation_update_many_with_opts(intern->bulk, bquery, bupdate, boptions, &error)) {
+				phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
+				goto cleanup;
+			}
+		} else {
+			if (!mongoc_bulk_operation_update_one_with_opts(intern->bulk, bquery, bupdate, boptions, &error)) {
+				phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
+				goto cleanup;
+			}
 		}
 	} else {
 		if (!bson_validate(bupdate, BSON_VALIDATE_DOT_KEYS|BSON_VALIDATE_DOLLAR_KEYS, NULL)) {
@@ -335,9 +342,16 @@ PHP_METHOD(BulkWrite, delete)
 		goto cleanup;
 	}
 
-	if (!mongoc_bulk_operation_remove_with_opts(intern->bulk, bquery, boptions, &error)) {
-		phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
-		goto cleanup;
+	if (zoptions && php_array_existsc(zoptions, "limit") && php_array_fetchc_bool(zoptions, "limit")) {
+		if (!mongoc_bulk_operation_remove_one_with_opts(intern->bulk, bquery, boptions, &error)) {
+			phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
+			goto cleanup;
+		}
+	} else {
+		if (!mongoc_bulk_operation_remove_many_with_opts(intern->bulk, bquery, boptions, &error)) {
+			phongo_throw_exception_from_bson_error_t(&error TSRMLS_CC);
+			goto cleanup;
+		}
 	}
 
 	intern->num_ops++;

From a446b990fb66212e9b68d8da3cfb996e3303ed4c Mon Sep 17 00:00:00 2001
From: Jeremy Mikola <jmikola@gmail.com>
Date: Thu, 17 Nov 2016 12:35:43 -0500
Subject: [PATCH] PHPC-827: Change maxStalenessMS to maxStalenessSeconds

---
 phongo_compat.h                                    |  2 ++
 php_phongo.c                                       | 35 ++++++++++---------
 src/MongoDB/ReadPreference.c                       | 38 +++++++++++----------
 .../manager/manager-ctor-read_preference-001.phpt  | 12 +++----
 .../manager/manager-ctor-read_preference-002.phpt  | 32 +++++++++---------
 .../manager/manager-ctor-read_preference-003.phpt  |  6 ++--
 .../manager/manager-ctor-read_preference-004.phpt  | 39 ++++++++++++++++++++++
 .../manager-ctor-read_preference-error-002.phpt    | 22 ++++++------
 .../readpreference-bsonserialize-001.phpt          |  4 +--
 .../readpreference-bsonserialize-002.phpt          |  6 ++--
 tests/readPreference/readpreference-ctor-001.phpt  |  6 ++--
 .../readpreference-ctor_error-002.phpt             |  4 +--
 .../readpreference-ctor_error-003.phpt             | 10 +++---
 .../readpreference-ctor_error-004.phpt             | 20 -----------
 tests/readPreference/readpreference-debug-001.phpt |  6 ++--
 .../readpreference-getMaxStalenessMS-001.phpt      | 26 ---------------
 .../readpreference-getMaxStalenessSeconds-001.phpt | 26 +++++++++++++++
 .../readpreference-getMaxStalenessSeconds-002.phpt | 26 +++++++++++++++
 18 files changed, 188 insertions(+), 132 deletions(-)
 create mode 100644 tests/manager/manager-ctor-read_preference-004.phpt
 delete mode 100644 tests/readPreference/readpreference-ctor_error-004.phpt
 delete mode 100644 tests/readPreference/readpreference-getMaxStalenessMS-001.phpt
 create mode 100644 tests/readPreference/readpreference-getMaxStalenessSeconds-001.phpt
 create mode 100644 tests/readPreference/readpreference-getMaxStalenessSeconds-002.phpt

diff --git a/phongo_compat.h b/phongo_compat.h
index 9a6e263..f19e234 100644
--- a/phongo_compat.h
+++ b/phongo_compat.h
@@ -97,6 +97,7 @@
 # define ADD_ASSOC_STRING(_zv, _key, _value) add_assoc_string_ex(_zv, ZEND_STRL(_key), (char *)(_value));
 # define ADD_ASSOC_STRINGL(_zv, _key, _value, _len) add_assoc_stringl_ex(_zv, ZEND_STRL(_key), (char *)(_value), _len);
 # define ADD_ASSOC_STRING_EX(_zv, _key, _key_len, _value, _value_len) add_assoc_stringl_ex(_zv, _key, _key_len, (char *)(_value), _value_len);
+# define ADD_ASSOC_DOUBLE_EX(_zv, _key, _value) add_assoc_double_ex(_zv, ZEND_STRL(_key), _value);
 # define ADD_ASSOC_LONG_EX(_zv, _key, _value) add_assoc_long_ex(_zv, ZEND_STRL(_key), _value);
 # define ADD_ASSOC_ZVAL_EX(_zv, _key, _value) add_assoc_zval_ex(_zv, ZEND_STRL(_key), _value);
 # define ADD_ASSOC_ZVAL(_zv, _key, _value) add_assoc_zval(_zv, _key, _value);
@@ -126,6 +127,7 @@
 # define ADD_ASSOC_STRING(_zv, _key, _value) add_assoc_string_ex(_zv, ZEND_STRS(_key), (char *)(_value), 1);
 # define ADD_ASSOC_STRINGL(_zv, _key, _value, _len) add_assoc_stringl_ex(_zv, ZEND_STRS(_key), (char *)(_value), _len, 1);
 # define ADD_ASSOC_STRING_EX(_zv, _key, _key_len, _value, _value_len) add_assoc_stringl_ex(_zv, _key, _key_len+1, (char *)(_value), _value_len, 1);
+# define ADD_ASSOC_DOUBLE_EX(_zv, _key, _value) add_assoc_double_ex(_zv, ZEND_STRS(_key), _value);
 # define ADD_ASSOC_LONG_EX(_zv, _key, _value) add_assoc_long_ex(_zv, ZEND_STRS(_key), _value);
 # define ADD_ASSOC_ZVAL_EX(_zv, _key, _value) add_assoc_zval_ex(_zv, ZEND_STRS(_key), _value);
 # define ADD_ASSOC_ZVAL(_zv, _key, _value) add_assoc_zval(_zv, _key, _value);
diff --git a/php_phongo.c b/php_phongo.c
index ece495b..4642c1f 100644
--- a/php_phongo.c
+++ b/php_phongo.c
@@ -920,8 +920,8 @@ void php_phongo_read_preference_to_zval(zval *retval, const mongoc_read_prefs_t
 #endif
 	}
 
-	if (mongoc_read_prefs_get_max_staleness_ms(read_prefs) != 0) {
-		ADD_ASSOC_LONG_EX(retval, "maxStalenessMS", mongoc_read_prefs_get_max_staleness_ms(read_prefs));
+	if (mongoc_read_prefs_get_max_staleness_seconds(read_prefs) > 0.0) {
+		ADD_ASSOC_DOUBLE_EX(retval, "maxStalenessSeconds", mongoc_read_prefs_get_max_staleness_seconds(read_prefs));
 	}
 } /* }}} */
 
@@ -977,7 +977,7 @@ static mongoc_uri_t *php_phongo_make_uri(const char *uri_string, bson_t *options
 			    !strcasecmp(key, "slaveok") ||
 			    !strcasecmp(key, "w") ||
 			    !strcasecmp(key, "wtimeoutms") ||
-			    !strcasecmp(key, "maxstalenessms") ||
+			    !strcasecmp(key, "maxstalenessseconds") ||
 			    !strcasecmp(key, "appname")
 			) {
 				continue;
@@ -1066,7 +1066,7 @@ static bool php_phongo_apply_rp_options_to_uri(mongoc_uri_t *uri, bson_t *option
 	if (!bson_iter_init_find_case(&iter, options, "slaveok") &&
 	    !bson_iter_init_find_case(&iter, options, "readpreference") &&
 	    !bson_iter_init_find_case(&iter, options, "readpreferencetags") &&
-	    !bson_iter_init_find_case(&iter, options, "maxstalenessms")
+	    !bson_iter_init_find_case(&iter, options, "maxstalenessseconds")
 	) {
 		return true;
 	}
@@ -1130,29 +1130,34 @@ static bool php_phongo_apply_rp_options_to_uri(mongoc_uri_t *uri, bson_t *option
 		return false;
 	}
 
-	/* Handle maxStalenessMS, and make sure it is not combined with primary
+	/* Handle maxStalenessSeconds, and make sure it is not combined with primary
 	 * readPreference */
-	if (bson_iter_init_find_case(&iter, options, "maxstalenessms") && BSON_ITER_HOLDS_INT32(&iter)) {
-		int32_t max_staleness_ms = bson_iter_int32(&iter);
+	if (bson_iter_init_find_case(&iter, options, "maxstalenessseconds") && (BSON_ITER_HOLDS_DOUBLE(&iter) || BSON_ITER_HOLDS_INT32(&iter))) {
+		double max_staleness_seconds = 0.0;
 
-		if (max_staleness_ms < 0) {
-			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Expected maxStalenessMS to be >= 0, %" PRId32 " given", max_staleness_ms);
+		if (BSON_ITER_HOLDS_DOUBLE(&iter)) {
+			max_staleness_seconds = bson_iter_double(&iter);
+		} else if (BSON_ITER_HOLDS_INT32(&iter)) {
+			max_staleness_seconds = (double) bson_iter_int32(&iter);
+		}
+
+		/* libmongoc does not export NO_MAX_STALENESS, so we need to use a magic
+		 * number for the default value */
+		if (max_staleness_seconds != -1.0 && max_staleness_seconds <= 0.0) {
+			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Expected maxStalenessSeconds to be > 0, %f given", max_staleness_seconds);
 			mongoc_read_prefs_destroy(new_rp);
 
 			return false;
 		}
 
-		/* max_staleness_ms is fetched as an INT32, so there is no need to check
-		 * if it exists INT32_MAX as we do in the ReadPreference constructor. */
-
-		if (mongoc_read_prefs_get_mode(new_rp) == MONGOC_READ_PRIMARY) {
-			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Primary read preference mode conflicts with maxStalenessMS");
+		if (max_staleness_seconds != -1.0 && mongoc_read_prefs_get_mode(new_rp) == MONGOC_READ_PRIMARY) {
+			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Primary read preference mode conflicts with maxStalenessSeconds");
 			mongoc_read_prefs_destroy(new_rp);
 
 			return false;
 		}
 
-		mongoc_read_prefs_set_max_staleness_ms(new_rp, max_staleness_ms);
+		mongoc_read_prefs_set_max_staleness_seconds(new_rp, max_staleness_seconds);
 	}
 
 	/* This may be redundant in light of the last check (primary with tags), but
diff --git a/src/MongoDB/ReadPreference.c b/src/MongoDB/ReadPreference.c
index fe0c7c6..652af79 100644
--- a/src/MongoDB/ReadPreference.c
+++ b/src/MongoDB/ReadPreference.c
@@ -105,25 +105,22 @@ PHP_METHOD(ReadPreference, __construct)
 		bson_destroy(tags);
 	}
 
-	if (options && php_array_exists(options, "maxStalenessMS")) {
-		phongo_long maxStalenessMS = php_array_fetchc_long(options, "maxStalenessMS");
+	if (options && php_array_exists(options, "maxStalenessSeconds")) {
+		double maxStalenessSeconds = php_array_fetchc_double(options, "maxStalenessSeconds");
 
-		if (maxStalenessMS < 0) {
-			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Expected maxStalenessMS to be >= 0, %" PHONGO_LONG_FORMAT " given", maxStalenessMS);
+		/* libmongoc does not export NO_MAX_STALENESS, so we need to use a magic
+		 * number for the default value */
+		if (maxStalenessSeconds != -1.0 && maxStalenessSeconds <= 0.0) {
+			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Expected maxStalenessSeconds to be > 0, %f given", maxStalenessSeconds);
 			return;
 		}
 
-		if (maxStalenessMS > INT32_MAX) {
-			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "Expected maxStalenessMS to be <= %" PRId32 ", %" PHONGO_LONG_FORMAT " given", INT32_MAX, maxStalenessMS);
+		if (maxStalenessSeconds != -1.0 && mode == MONGOC_READ_PRIMARY) {
+			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "maxStalenessSeconds may not be used with primary mode");
 			return;
 		}
 
-		if (maxStalenessMS > 0 && mode == MONGOC_READ_PRIMARY) {
-			phongo_throw_exception(PHONGO_ERROR_INVALID_ARGUMENT TSRMLS_CC, "maxStalenessMS may not be used with primary mode");
-			return;
-		}
-
-		mongoc_read_prefs_set_max_staleness_ms(intern->read_preference, maxStalenessMS);
+		mongoc_read_prefs_set_max_staleness_seconds(intern->read_preference, maxStalenessSeconds);
 	}
 
 	if (!mongoc_read_prefs_is_valid(intern->read_preference)) {
@@ -133,11 +130,12 @@ PHP_METHOD(ReadPreference, __construct)
 }
 /* }}} */
 
-/* {{{ proto integer ReadPreference::getMaxStalenessMS()
-   Returns the ReadPreference maxStalenessMS value */
-PHP_METHOD(ReadPreference, getMaxStalenessMS)
+/* {{{ proto double|null ReadPreference::getMaxStalenessSeconds()
+   Returns the ReadPreference maxStalenessSeconds value */
+PHP_METHOD(ReadPreference, getMaxStalenessSeconds)
 {
 	php_phongo_readpreference_t *intern;
+	double maxStalenessSeconds;
 	SUPPRESS_UNUSED_WARNING(return_value_ptr) SUPPRESS_UNUSED_WARNING(return_value_used)
 
 	intern = Z_READPREFERENCE_OBJ_P(getThis());
@@ -146,7 +144,13 @@ PHP_METHOD(ReadPreference, getMaxStalenessMS)
 		return;
 	}
 
-	RETURN_LONG(mongoc_read_prefs_get_max_staleness_ms(intern->read_preference));
+	maxStalenessSeconds = mongoc_read_prefs_get_max_staleness_seconds(intern->read_preference);
+
+	if (maxStalenessSeconds > 0.0) {
+		RETURN_DOUBLE(maxStalenessSeconds);
+	}
+
+	RETURN_NULL();
 }
 /* }}} */
 
@@ -232,7 +236,7 @@ ZEND_END_ARG_INFO()
 
 static zend_function_entry php_phongo_readpreference_me[] = {
 	PHP_ME(ReadPreference, __construct, ai_ReadPreference___construct, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
-	PHP_ME(ReadPreference, getMaxStalenessMS, ai_ReadPreference_void, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
+	PHP_ME(ReadPreference, getMaxStalenessSeconds, ai_ReadPreference_void, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
 	PHP_ME(ReadPreference, getMode, ai_ReadPreference_void, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
 	PHP_ME(ReadPreference, getTagSets, ai_ReadPreference_void, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
 	PHP_ME(ReadPreference, bsonSerialize, ai_ReadPreference_void, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)
diff --git a/tests/manager/manager-ctor-read_preference-001.phpt b/tests/manager/manager-ctor-read_preference-001.phpt
index d170598..1395ece 100644
--- a/tests/manager/manager-ctor-read_preference-001.phpt
+++ b/tests/manager/manager-ctor-read_preference-001.phpt
@@ -6,10 +6,10 @@ MongoDB\Driver\Manager::__construct(): read preference options
 $tests = [
     ['mongodb://127.0.0.1/?readPreference=primary', []],
     ['mongodb://127.0.0.1/?readPreference=secondary&readPreferenceTags=tag:one&readPreferenceTags=', []],
-    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessMS=1000', []],
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=1.000', []],
     [null, ['readPreference' => 'primary']],
     [null, ['readPreference' => 'secondary', 'readPreferenceTags' => [['tag' => 'one'], []]]],
-    [null, ['readPreference' => 'secondary', 'maxStalenessMS' => 1000]],
+    [null, ['readPreference' => 'secondary', 'maxStalenessSeconds' => 1.000]],
 ];
 
 foreach ($tests as $test) {
@@ -45,8 +45,8 @@ object(MongoDB\Driver\ReadPreference)#%d (%d) {
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1000)
+  ["maxStalenessSeconds"]=>
+  float(1)
 }
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
@@ -70,7 +70,7 @@ object(MongoDB\Driver\ReadPreference)#%d (%d) {
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1000)
+  ["maxStalenessSeconds"]=>
+  float(1)
 }
 ===DONE===
diff --git a/tests/manager/manager-ctor-read_preference-002.phpt b/tests/manager/manager-ctor-read_preference-002.phpt
index b48ff1d..01335a9 100644
--- a/tests/manager/manager-ctor-read_preference-002.phpt
+++ b/tests/manager/manager-ctor-read_preference-002.phpt
@@ -1,14 +1,14 @@
 --TEST--
-MongoDB\Driver\Manager::__construct(): read preference options (maxStalenessMS)
+MongoDB\Driver\Manager::__construct(): read preference options (maxStalenessSeconds)
 --FILE--
 <?php
 
 $tests = [
-    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessMS=1231', []],
-    ['mongodb://127.0.0.1/?readPreference=secondary', ['maxStalenessMS' => 1231]],
-    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessMS=1000', ['maxStalenessMS' => 2000]],
-    ['mongodb://127.0.0.1/?readpreference=secondary&maxstalenessms=1231', []],
-    ['mongodb://127.0.0.1/?readpreference=secondary', ['maxstalenessms' => 1231]],
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=1.231', []],
+    ['mongodb://127.0.0.1/?readPreference=secondary', ['maxStalenessSeconds' => 1.231]],
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=1.000', ['maxStalenessSeconds' => 2.000]],
+    ['mongodb://127.0.0.1/?readpreference=secondary&maxStalenessSeconds=1.231', []],
+    ['mongodb://127.0.0.1/?readpreference=secondary', ['maxStalenessSeconds' => 1.231]],
 ];
 
 foreach ($tests as $test) {
@@ -24,31 +24,31 @@ foreach ($tests as $test) {
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1231)
+  ["maxStalenessSeconds"]=>
+  float(1.231)
 }
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1231)
+  ["maxStalenessSeconds"]=>
+  float(1.231)
 }
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(2000)
+  ["maxStalenessSeconds"]=>
+  float(2)
 }
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1231)
+  ["maxStalenessSeconds"]=>
+  float(1.231)
 }
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1231)
+  ["maxStalenessSeconds"]=>
+  float(1.231)
 }
 ===DONE===
diff --git a/tests/manager/manager-ctor-read_preference-003.phpt b/tests/manager/manager-ctor-read_preference-003.phpt
index 80789ac..f147552 100644
--- a/tests/manager/manager-ctor-read_preference-003.phpt
+++ b/tests/manager/manager-ctor-read_preference-003.phpt
@@ -6,7 +6,7 @@ MongoDB\Driver\Manager::__construct(): read preference options of the wrong type
 $tests = [
     ['mongodb://127.0.0.1/?readPreference=secondary', ['readPreference' => 1]],
     ['mongodb://127.0.0.1/?readPreference=secondary&readPreferenceTags=tag:one', ['readPreferenceTags' => 'invalid']],
-    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessMS=1000', ['maxStalenessMS' => 'invalid']],
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=1.000', ['maxStalenessSeconds' => 'invalid']],
 ];
 
 foreach ($tests as $test) {
@@ -38,7 +38,7 @@ object(MongoDB\Driver\ReadPreference)#%d (%d) {
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1000)
+  ["maxStalenessSeconds"]=>
+  float(1)
 }
 ===DONE===
diff --git a/tests/manager/manager-ctor-read_preference-004.phpt b/tests/manager/manager-ctor-read_preference-004.phpt
new file mode 100644
index 0000000..27372f4
--- /dev/null
+++ b/tests/manager/manager-ctor-read_preference-004.phpt
@@ -0,0 +1,39 @@
+--TEST--
+MongoDB\Driver\Manager::__construct(): read preference options (maxStalenessSeconds default)
+--FILE--
+<?php
+
+$tests = [
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=-1', []],
+    ['mongodb://127.0.0.1/?readPreference=secondary&maxStalenessSeconds=-1.0', []],
+    ['mongodb://127.0.0.1/?readPreference=secondary', ['maxStalenessSeconds' => -1]],
+    ['mongodb://127.0.0.1/?readPreference=secondary', ['maxStalenessSeconds' => -1.0]],
+];
+
+foreach ($tests as $test) {
+    list($uri, $options) = $test;
+
+    $manager = new MongoDB\Driver\Manager($uri, $options);
+    var_dump($manager->getReadPreference());
+}
+
+?>
+===DONE===
+--EXPECTF--
+object(MongoDB\Driver\ReadPreference)#%d (%d) {
+  ["mode"]=>
+  string(9) "secondary"
+}
+object(MongoDB\Driver\ReadPreference)#%d (%d) {
+  ["mode"]=>
+  string(9) "secondary"
+}
+object(MongoDB\Driver\ReadPreference)#%d (%d) {
+  ["mode"]=>
+  string(9) "secondary"
+}
+object(MongoDB\Driver\ReadPreference)#%d (%d) {
+  ["mode"]=>
+  string(9) "secondary"
+}
+===DONE===
diff --git a/tests/manager/manager-ctor-read_preference-error-002.phpt b/tests/manager/manager-ctor-read_preference-error-002.phpt
index 9d5be0d..874e9b1 100644
--- a/tests/manager/manager-ctor-read_preference-error-002.phpt
+++ b/tests/manager/manager-ctor-read_preference-error-002.phpt
@@ -1,28 +1,28 @@
 --TEST--
-MongoDB\Driver\Manager::__construct(): invalid read preference (maxStalenessMS)
+MongoDB\Driver\Manager::__construct(): invalid read preference (maxStalenessSeconds)
 --FILE--
 <?php
 
 require_once __DIR__ . '/../utils/tools.php';
 
 echo throws(function() {
-    $manager = new MongoDB\Driver\Manager('mongodb://127.0.0.1/?maxstalenessms=1231');
+    $manager = new MongoDB\Driver\Manager('mongodb://127.0.0.1/?maxStalenessSeconds=1.231');
 }, "MongoDB\Driver\Exception\InvalidArgumentException"), "\n";
 
 echo throws(function() {
-    $manager = new MongoDB\Driver\Manager('mongodb://127.0.0.1/?maxStalenessMS=1231');
+    $manager = new MongoDB\Driver\Manager('mongodb://127.0.0.1/?maxStalenessSeconds=1.231');
 }, "MongoDB\Driver\Exception\InvalidArgumentException"), "\n";
 
 echo throws(function() {
-    $manager = new MongoDB\Driver\Manager(null, ['maxstalenessms' => 1231]);
+    $manager = new MongoDB\Driver\Manager(null, ['maxStalenessSeconds' => 1.231]);
 }, "MongoDB\Driver\Exception\InvalidArgumentException"), "\n";
 
 echo throws(function() {
-    $manager = new MongoDB\Driver\Manager(null, ['maxStalenessMS' => 1231]);
+    $manager = new MongoDB\Driver\Manager(null, ['maxStalenessSeconds' => 1.231]);
 }, "MongoDB\Driver\Exception\InvalidArgumentException"), "\n";
 
 echo throws(function() {
-    $manager = new MongoDB\Driver\Manager(null, ['readPreference' => 'secondary', 'maxStalenessMS' => -1]);
+    $manager = new MongoDB\Driver\Manager(null, ['readPreference' => 'secondary', 'maxStalenessSeconds' => 0]);
 }, "MongoDB\Driver\Exception\InvalidArgumentException"), "\n";
 
 ?>
@@ -30,13 +30,13 @@ echo throws(function() {
 <?php exit(0); ?>
 --EXPECTF--
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?maxstalenessms=1231'
+Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?maxStalenessSeconds=1.231'
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?maxStalenessMS=1231'
+Failed to parse MongoDB URI: 'mongodb://127.0.0.1/?maxStalenessSeconds=1.231'
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Primary read preference mode conflicts with maxStalenessMS
+Primary read preference mode conflicts with maxStalenessSeconds
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Primary read preference mode conflicts with maxStalenessMS
+Primary read preference mode conflicts with maxStalenessSeconds
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Expected maxStalenessMS to be >= 0, -1 given
+Expected maxStalenessSeconds to be > 0, 0.000000 given
 ===DONE===
diff --git a/tests/readPreference/readpreference-ctor-001.phpt b/tests/readPreference/readpreference-ctor-001.phpt
index 47c6305..635a944 100644
--- a/tests/readPreference/readpreference-ctor-001.phpt
+++ b/tests/readPreference/readpreference-ctor-001.phpt
@@ -6,7 +6,7 @@ MongoDB\Driver\ReadPreference construction
 var_dump(new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY));
 var_dump(new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, [['tag' => 'one']]));
 var_dump(new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY, []));
-var_dump(new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessMS' => 1000]));
+var_dump(new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessSeconds' => 1.000]));
 
 ?>
 ===DONE===
@@ -35,7 +35,7 @@ object(MongoDB\Driver\ReadPreference)#%d (%d) {
 object(MongoDB\Driver\ReadPreference)#%d (%d) {
   ["mode"]=>
   string(9) "secondary"
-  ["maxStalenessMS"]=>
-  int(1000)
+  ["maxStalenessSeconds"]=>
+  float(1)
 }
 ===DONE===
diff --git a/tests/readPreference/readpreference-ctor_error-002.phpt b/tests/readPreference/readpreference-ctor_error-002.phpt
index 50ea544..01bed8b 100644
--- a/tests/readPreference/readpreference-ctor_error-002.phpt
+++ b/tests/readPreference/readpreference-ctor_error-002.phpt
@@ -17,9 +17,9 @@ echo throws(function() {
     new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, ['invalid']);
 }, 'MongoDB\Driver\Exception\InvalidArgumentException'), "\n";
 
-// Ensure that tagSets is validated before maxStalenessMS option
+// Ensure that tagSets is validated before maxStalenessSeconds option
 echo throws(function() {
-    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, ['invalid'], ['maxStalenessMS' => -1]);
+    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, ['invalid'], ['maxStalenessSeconds' => 0]);
 }, 'MongoDB\Driver\Exception\InvalidArgumentException'), "\n";
 
 ?>
diff --git a/tests/readPreference/readpreference-ctor_error-003.phpt b/tests/readPreference/readpreference-ctor_error-003.phpt
index 88e614a..4bf5737 100644
--- a/tests/readPreference/readpreference-ctor_error-003.phpt
+++ b/tests/readPreference/readpreference-ctor_error-003.phpt
@@ -1,16 +1,16 @@
 --TEST--
-MongoDB\Driver\ReadPreference construction (invalid maxStalenessMS)
+MongoDB\Driver\ReadPreference construction (invalid maxStalenessSeconds)
 --FILE--
 <?php
 
 require_once __DIR__ . '/../utils/tools.php';
 
 echo throws(function() {
-    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY, null, ['maxStalenessMS' => 1000]);
+    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY, null, ['maxStalenessSeconds' => 1.000]);
 }, 'MongoDB\Driver\Exception\InvalidArgumentException'), "\n";
 
 echo throws(function() {
-    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessMS' => -1]);
+    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessSeconds' => 0]);
 }, 'MongoDB\Driver\Exception\InvalidArgumentException'), "\n";
 
 ?>
@@ -18,7 +18,7 @@ echo throws(function() {
 <?php exit(0); ?>
 --EXPECT--
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-maxStalenessMS may not be used with primary mode
+maxStalenessSeconds may not be used with primary mode
 OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Expected maxStalenessMS to be >= 0, -1 given
+Expected maxStalenessSeconds to be > 0, 0.000000 given
 ===DONE===
diff --git a/tests/readPreference/readpreference-ctor_error-004.phpt b/tests/readPreference/readpreference-ctor_error-004.phpt
deleted file mode 100644
index 08870f3..0000000
--- a/tests/readPreference/readpreference-ctor_error-004.phpt
+++ /dev/null
@@ -1,20 +0,0 @@
---TEST--
-MongoDB\Driver\ReadPreference construction (invalid maxStalenessMS range)
---SKIPIF--
-<?php if (8 !== PHP_INT_SIZE) { die('skip Only for 64-bit platform'); } ?>
---FILE--
-<?php
-
-require_once __DIR__ . '/../utils/tools.php';
-
-echo throws(function() {
-    new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessMS' => 2147483648]);
-}, 'MongoDB\Driver\Exception\InvalidArgumentException'), "\n";
-
-?>
-===DONE===
-<?php exit(0); ?>
---EXPECT--
-OK: Got MongoDB\Driver\Exception\InvalidArgumentException
-Expected maxStalenessMS to be <= 2147483647, 2147483648 given
-===DONE===
diff --git a/tests/readPreference/readpreference-getMaxStalenessMS-001.phpt b/tests/readPreference/readpreference-getMaxStalenessMS-001.phpt
deleted file mode 100644
index 69902c9..0000000
--- a/tests/readPreference/readpreference-getMaxStalenessMS-001.phpt
+++ /dev/null
@@ -1,26 +0,0 @@
---TEST--
-MongoDB\Driver\ReadPreference::getMaxStalenessMS()
---FILE--
-<?php
-
-require_once __DIR__ . '/../utils/tools.php';
-
-$tests = [
-    0,
-    1000,
-    2147483647,
-];
-
-foreach ($tests as $test) {
-    $rp = new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessMS' => $test]);
-    var_dump($rp->getMaxStalenessMS());
-}
-
-?>
-===DONE===
-<?php exit(0); ?>
---EXPECT--
-int(0)
-int(1000)
-int(2147483647)
-===DONE===
diff --git a/tests/readPreference/readpreference-getMaxStalenessSeconds-001.phpt b/tests/readPreference/readpreference-getMaxStalenessSeconds-001.phpt
new file mode 100644
index 0000000..b10694d
--- /dev/null
+++ b/tests/readPreference/readpreference-getMaxStalenessSeconds-001.phpt
@@ -0,0 +1,26 @@
+--TEST--
+MongoDB\Driver\ReadPreference::getMaxStalenessSeconds()
+--FILE--
+<?php
+
+require_once __DIR__ . '/../utils/tools.php';
+
+$tests = [
+    0.5,
+    1.000,
+    2147483.647,
+];
+
+foreach ($tests as $test) {
+    $rp = new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, ['maxStalenessSeconds' => $test]);
+    var_dump($rp->getMaxStalenessSeconds());
+}
+
+?>
+===DONE===
+<?php exit(0); ?>
+--EXPECT--
+float(0.5)
+float(1)
+float(2147483.647)
+===DONE===
diff --git a/tests/readPreference/readpreference-getMaxStalenessSeconds-002.phpt b/tests/readPreference/readpreference-getMaxStalenessSeconds-002.phpt
new file mode 100644
index 0000000..5fcd7fa
--- /dev/null
+++ b/tests/readPreference/readpreference-getMaxStalenessSeconds-002.phpt
@@ -0,0 +1,26 @@
+--TEST--
+MongoDB\Driver\ReadPreference::getMaxStalenessSeconds() with default value
+--FILE--
+<?php
+
+require_once __DIR__ . '/../utils/tools.php';
+
+$tests = [
+    [],
+    ['maxStalenessSeconds' => -1],
+    ['maxStalenessSeconds' => -1.0],
+];
+
+foreach ($tests as $test) {
+    $rp = new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_SECONDARY, null, $test);
+    var_dump($rp->getMaxStalenessSeconds());
+}
+
+?>
+===DONE===
+<?php exit(0); ?>
+--EXPECT--
+NULL
+NULL
+NULL
+===DONE===
